// src/grid/renderers/dddRenderer.js
// (필요시 프로젝트 경로에 맞게 조정)

export function renderDddWithAc(params) {
  // 현재 컬럼(field)은 dddD.. 형태라고 가정
  const field = params.colDef.field;
  const acField = field.replace(/^dddD/, 'dddAcD');

  const baseVal = params.value;                      // dddD.. 값
  const acRaw = params.data && params.data[acField]; // dddAcD.. 값

  // dddD.. 값은 그냥 텍스트
  const baseText = baseVal == null ? '' : String(baseVal);

  // dddAcD.. 값이 숫자면 모양/색상 처리
  let acHtml = '';
  if (acRaw != null && acRaw !== '') {
    const acNum = Number(acRaw);
    if (!Number.isNaN(acNum) && acNum !== 0) {
      const isPos = acNum > 0;
      const icon = isPos ? '▲' : '▼';
      const color = isPos ? '#d32f2f' /* red */ : '#1976d2' /* blue */;
      const absText = Math.abs(acNum).toString(); // 음수면 - 제거

      acHtml = ` (<span style="color:${color}">${icon} ${absText}</span>)`;
    } else if (!Number.isNaN(acNum) && acNum === 0) {
      // 0이면 아이콘/색상 없이 표시(원하시면 생략 가능)
      acHtml = ` (0)`;
    }
  }

  // 최종 표기: [dddD.. (dddAcD..)]
  const html = `[${baseText}${acHtml}]`;

  // 가장 단순: 문자열 반환
  return html;
}