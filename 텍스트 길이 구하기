methods: {
  getMaxCellTextWidth(gridApi, colId) {
    const ctx = document.createElement('canvas').getContext('2d');

    // 셀 폰트 설정
    const anyCell =
      document.querySelector(`.ag-center-cols-container .ag-cell[col-id="${colId}"]`) ||
      document.querySelector(`.ag-left-cols-container .ag-cell[col-id="${colId}"]`)  ||
      document.querySelector(`.ag-right-cols-container .ag-cell[col-id="${colId}"]`);
    const fontSource = anyCell?.querySelector('.ag-cell-value') || anyCell || document.querySelector('.ag-root') || document.body;
    const cs = window.getComputedStyle(fontSource);
    ctx.font = `${cs.fontStyle} ${cs.fontVariant} ${cs.fontWeight} ${cs.fontSize} ${cs.fontFamily}`;

    // 렌더된 셀 기준
    let domMax = 0;
    const cells = document.querySelectorAll(
      `.ag-center-cols-container .ag-cell[col-id="${colId}"],` +
      `.ag-left-cols-container .ag-cell[col-id="${colId}"],`  +
      `.ag-right-cols-container .ag-cell[col-id="${colId}"]`
    );
    cells.forEach(cell => {
      const el = cell.querySelector('.ag-cell-value') || cell;
      const text = (el.textContent || '').trim();
      if (!text) return;
      const w = Math.ceil(ctx.measureText(text).width);
      if (w > domMax) domMax = w;
    });

    // 전체 데이터 기준
    let dataMax = 0;
    gridApi.forEachNodeAfterFilterAndSort(node => {
      const v = gridApi.getValue(colId, node);
      if (v == null) return;
      const w = Math.ceil(ctx.measureText(String(v)).width);
      if (w > dataMax) dataMax = w;
    });

    return Math.max(domMax, dataMax);
  }
}




this.gridApi.refreshCells();
requestAnimationFrame(() => {
  const ids = this.getLeafIdsFromGroup('myGroup');
  ids.forEach(id => {
    const w = this.getMaxCellTextWidth(this.gridApi, id);
    this.columnApi.setColumnWidth(id, Math.max(40, w + 12));
  });
});